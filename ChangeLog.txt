2018-08-21 Version 2.32

* Geometry::AdditionalData simplified

* isAntiHermitian available for CRS and Matrix

2018-08-09 Version 2.30

* ConfigBase.psiTag: can override default compiler

* Compiles on a MAC

2018-07-31 Version 2.28

* configure.pl uses PsiTag

2018-07-24 Version 2.26

* PsiTag: recursive behavior

* indexOrMinusOne

* NewMake improvments

* Profiling takes message strings

* Matrix::reset gone, Matrix::resize changed
Matrix ctor added. Thanks to Ed for suggestions

* LanczosVectors changes to matrix allocation

2018-07-12 Version 2.24

* prints GEOMETRY with IoNg

* IoNgSerializer doesGroupExist

* IoNgSerializer ctor can be inside try/catch block

* PsiTag

* new build system

* TypesEqual and IndexOfItem added

* CrsMatrix::conjugate() added

2018-06-28 Version 2.22

* USE_IO_NG deleted, USE_IO_SIMPLE added

* ProgressIndicator::time() added

* IoSimple and IoNg cleanup

* IoNg holds filename and mode

* IoNg improvements

* IoNg: bug fixed in writeVectorEntry

* IoNg: has canary, but can be improved


2018-06-19 Version 2.20

* myApp01.cpp sample PsimagLite app

* IoNg: pairs read/write

2018-05-21 Version 2.18

* IoNg fixes

* USE_IO_NG enabled by default

* compiler switches, supports clang++

* testIoNg compiles

* CRS: sum function for multiple
matrices (Contributed by Ed)

* Profiling class changed

2018-05-08 Version 2.16

* IoNg for bool and std::vector<bool>

* CrsMatrix fullMatrixToCrsMatrix preallocates
memory

* Matrix: svd fallback

* Parallelizer API changes

* PsimagLite manual started

2018-04-24 Version 2.14

* IoNg work

* src/Io/ directory

2018-04-16 Version 2.12

* IoNg work in progress

2018-04-06 Version 2.10

* Honeycomb geometry added
 supports periodicity in x and y
 HoneycombLy must be a multiple of 4

* serialization selection and
  serialization with IoNg

* svd with float

* float compilation

* clang++ compilation

* -Werror not set by default in production
  But please report compilation warnings
  so that they can be corrected

2018-03-22 Version 2.08

* IoNg work in progress

* minimizer test compiles

* Ainur: added test inputs

* DependenciesTest.txt added
  for testing dependencies

2018-02-27 Version 2.06

* CRS: Many improvements suggested by Ed,
  including memory preallocation in many
  functions

2018-02-20 Version 2.04

* make.pl for drivers updated

* IoNg work started

* CRS: unneeded externalProducts commented out

2018-02-08 Version 2.02

* LanczosVectors storage managed internally

* PSI_PUBSETBUF should be set for lustre filesystem
  to disable buffering.

2018-01-25 Version 2.00

* Lanczos Solver reortho now possible

2017-01-03 Version 1.80

* IoSimple: unbuffered output

2017-12-20 Version 1.78

* Nested pthreads example added

2017-11-30 Version 1.76

* LanczosSolver: clean up

2017-11-27 Version 1.74

* LanczosSolver: initialize finalize hooks

2017-11-09 Version 1.72

* Ainur improvements

* clang compilation fix

2017-09-20 Version 1.70

* scripts: perl open with 3 arguments

* Ainur: reads non-complex inputs

2017-08-28 Version 1.68

* Ainur: boost-spirit backend

* USE_BOOST: optional compilation with boost

* deleted gitrev

* rows() and cols() for most matrix types

2017-08-07 Version 1.66

* Matrix class: new ctor, clear and data members

* NO_DEPRECATED_ALLOWED preprocessor flag

* CrsMatrix isZero default optional arg. is 0

* LAPACK: print if not thread safe

* Ainur new input system: very early implementation

* Ainur new input system: hooked up

* IsInputLike and IsOutputLike predicates for EnableIf

* Make.pm: clean target may be appended to

* some "template constraints" added

2017-06-15 Version 1.64

* Domain checks for operator+= in Matrix

* Make.pm, newMake function takes pointer to hash
  as third argument

2017-06-08 Version 1.62

* faster isZero function for CrsMatrix

* transpose of Matrix added (without conjugate)
 
2017-05-25 Version 1.60

* Lanczos: saves LanczosVectors by the default
    
    Internally lotaMemory=true is the default
    prefix + NoSaveLanczosVectors=1
    should be used to have Lanczos not save vectors

* svd: complex version and optimal lwork

2017-05-18 version 1.58

* PTHREAD_ASSIGN_AFFINITIES removed, now a runtime option

* LanczosSolver: checks for success of memory alloc.

* svd implementation now in Matrix.cpp

2017-05-11 version 1.56

* PthreadsNg: LoadBalancerDefault assigns largest weight first

* err function added

2017-05-04 Version 1.54

* JSON Library removed

* PsiApp class added

* Make.pm takes path

* log2Integer function added

* LAPACK algorithm for lwork changed

2017-04-24 Version 1.52

* Geometry: Ladder: Reads IsPeriodicX/Y

* Makefile: -lblas -llapack

* Matrices: rows() cols() interface

